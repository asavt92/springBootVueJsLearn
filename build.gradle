buildscript {
    repositories {
        mavenCentral()
    }
    ext {
        lombokVersion = '1.18.4'
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    }
}


plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'java'
    id 'io.franzbecker.gradle-lombok' version '1.8'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'

group = 'ru'
version = '0.0.1'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compile 'org.springframework.boot:spring-boot-starter-test'

    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.0'

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.postgresql:postgresql')
    compile('javax.xml.bind:jaxb-api')
    compile('com.sun.xml.bind:jaxb-core')
    compile('com.sun.xml.bind:jaxb-impl')

    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.0.RELEASE')
    
//    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
//    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
}

task fatJar(type: Jar) {

    manifest {
        attributes "Main-Class": "ru.asavt.spring.earn.learn.LearnApplication"
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}
